name: Deploy static content to Github Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master", "ghactions"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "frontend"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          # TODO Should be node v18, but https://stackoverflow.com/a/69699772/829568 . Upgrade once fixed.
          node-version: 16.x
          cache: npm
          cache-dependency-path: frontend/package.json
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: frontend/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: v1-build-cache-frontend-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}-${{ hashFiles('frontend/**.[jt]s', 'frontend/**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            v1-build-cache-frontend-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}-
      - name: Install Dependencies
        working-directory: frontend
        run: npm install
      - name: Build
        working-directory: frontend
        run: npm run build
      - name: Export
        working-directory: frontend
        run: npm run export
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'frontend/out'
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
