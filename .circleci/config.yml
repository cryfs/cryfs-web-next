version: 2.1

executors:
  my-executor:
    docker:
      - image: circleci/node:11.12.0

jobs:
  frontend_build:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Update Npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: v1-dependency-cache-frontend-{{ checksum "frontend/package.json" }}
      - run:
          name: Install Dependencies
          command: cd frontend && npm install
      - save_cache:
          key: v1-dependency-cache-frontend-{{ checksum "frontend/package.json" }}
          paths:
            - ./frontend/node_modules
      - run:
          name: Build
          command: 'cd frontend && npm run build'
      - run:
          name: Export
          command: 'cd frontend && npm run export'
      - run:
          name: Copy to Workspace
          command: |
            mkdir -p /tmp/workspace
            rm -rf /tmp/workspace/out
            mv frontend/out /tmp/workspace
            mkdir /tmp/workspace/out/.circleci
            cp .circleci/config.dummy.yml /tmp/workspace/out/.circleci/config.yml
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - out

  frontend_deploy:
    executor: my-executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "8f:bc:a3:32:67:e8:39:b5:35:1c:45:16:3a:7b:7b:e1"
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Setup Git
          command: |
            git config user.email "messmer@cryfs.org"
            git config user.name "Circle CI Deployment"
            git checkout gh-pages
      - run:
          # Delete all files except the 'CNAME' file (which configures custom domains for github pages)
          name: Delete Old Version
          command: |
            git rm -r --ignore-unmatch *
            git reset HEAD CNAME
            git checkout CNAME
      - run:
          name: Replace with New Version
          command: |
            cp -R /tmp/workspace/out/. .
            git add .
            find .
            git status
      - run:
          name: Commit Changes
          command: |
            git commit -m "Update to ${CIRCLE_SHA1}"
            git status
      - run:
          name: Push to GitHub Pages
          command: |
            git push

  backend_build:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Update Npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: v1-dependency-cache-backend-{{ checksum "backend/package.json" }}
      - run:
          name: Install Dependencies
          command: cd backend && npm install
      - save_cache:
          key: v1-dependency-cache-backend-{{ checksum "backend/package.json" }}
          paths:
            - ./backend/node_modules
      - run:
          name: Build
          command: 'cd backend && ./serverless package --package artifacts --stage prod'
      - run:
          name: Copy to Workspace
          command: |
            mkdir -p /tmp/workspace
            rm -rf /tmp/workspace/artifacts
            mv backend/artifacts /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - artifacts
      - store_artifacts:
          path: /tmp/workspace/artifacts

  backend_deploy:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Update Npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: v1-dependency-cache-backend-{{ checksum "backend/package.json" }}
      - run:
          name: Install Dependencies
          command: cd backend && npm install
      - save_cache:
          key: v1-dependency-cache-backend-{{ checksum "backend/package.json" }}
          paths:
            - ./backend/node_modules
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Deploy
          command: 'cd backend && ./serverless deploy --package /tmp/workspace/artifacts --stage prod --conceal'

workflows:
  version: 2

  build_and_frontend_deploy:
    jobs:
      - frontend_build
      - frontend_deploy:
          requires:
            - frontend_build
          filters:
            branches:
              only:
                - master
      - backend_build
      - backend_deploy:
          requires:
            - backend_build
          filters:
            branches:
              only:
                - master
